name: Terraform Deploy AWS Infrastructure

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      terraform_action:
        type: choice
        description: Select Terraform action
        options:
        - plan
        - apply
        - destroy
        required: true
  push:
    branches:
      - main
    paths:
      - 'terraform/**'

permissions:
  id-token: write  # Required for OIDC authentication with AWS
  contents: read

jobs:
  deploy:
    name: Deploy Resources to AWS 
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    env:
      AWS_REGION: us-east-1
      AWS_ACCOUNT_ID: 704855531002 # ${{ secrets.AWS_ACCOUNT_ID }}
      ROLE_NAME: Github_Actions_Super_Mario_OIDC_Role
      
    steps:
    
    - name: Checkout repo
      uses: actions/checkout@v4
  
    - name: Configure AWS Credentials  via OIDC
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.ROLE_NAME }}
        aws-region: ${{ env.AWS_REGION }}

    # - name: List files in the current directory
    #   run: ls -la
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.11.0

    - name: Allow GitHub Actions in EKS Public Access CIDRs
      run: |
        GITHUB_IPS=$(curl -s https://api.ipify.org )
        eksctl utils update-cluster-vpc-config \
          --cluster smarthire \
          --region us-east-1 \
          --public-access-cidrs "${GITHUB_IPS}/32" \
          --approve || true

    - name: Terraform Init
      run: terraform init 
      working-directory: terraform

    - name: Terraform Plan
      run: terraform plan  
      working-directory: terraform

    - name: Terraform Apply
      if: ${{ github.event.inputs.terraform_action == 'apply' }}
      run: terraform apply -auto-approve
      working-directory: terraform

    - name: Terraform destroy
      if: ${{ github.event.inputs.terraform_action == 'destroy' }}
      run: terraform destroy -auto-approve
      working-directory: terraform
